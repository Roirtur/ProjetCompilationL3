
** Conflict (shift/reduce) in state 129.
** Token involved: ELSE
** This state is reached from main after reading:

IF LPAREN expression RPAREN IF LPAREN expression RPAREN statement

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement 
(?)

** In state 129, looking ahead at ELSE, shifting is permitted
** because of the following sub-derivation:

IF LPAREN expression RPAREN statement ELSE statement 
                            IF LPAREN expression RPAREN statement . ELSE statement 

** In state 129, looking ahead at ELSE, reducing production
** statement -> IF LPAREN expression RPAREN statement
** is permitted because of the following sub-derivation:

IF LPAREN expression RPAREN statement ELSE statement // lookahead token appears
                            IF LPAREN expression RPAREN statement . 

** Conflict (reduce/reduce) in state 125.
** Token involved: BLOCKEND
** This state is reached from main after reading:

BLOCKSTART statement SEMICOLON

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement 
BLOCKSTART statement_list BLOCKEND // lookahead token appears
           statement SEMICOLON statement_list // lookahead token is inherited
                               (?)

** In state 125, looking ahead at BLOCKEND, reducing production
** statement ->
** is permitted because of the following sub-derivation:

statement // lookahead token is inherited
. 

** In state 125, looking ahead at BLOCKEND, reducing production
** statement_list ->
** is permitted because of the following sub-derivation:

. 

** Conflict (reduce/reduce) in state 118.
** Token involved: BLOCKEND
** This state is reached from main after reading:

BLOCKSTART

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement 
BLOCKSTART statement_list BLOCKEND // lookahead token appears
           (?)

** In state 118, looking ahead at BLOCKEND, reducing production
** statement ->
** is permitted because of the following sub-derivation:

statement // lookahead token is inherited
. 

** In state 118, looking ahead at BLOCKEND, reducing production
** statement_list ->
** is permitted because of the following sub-derivation:

. 

** Conflict (shift/reduce) in state 40.
** Tokens involved: TIMES REM PLUS OR MINUS LT LEQ GT GEQ EQ DOUBLECOLON DOT DIV DIFF AND
** The following explanations concentrate on token TIMES.
** This state is reached from main after reading:

SET LPAREN expression binary_operator expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement 
SET LPAREN expression COMMA expression RPAREN 
           (?)

** In state 40, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expression binary_operator expression 
                           expression binary_operator expression 
                                      . TIMES 

** In state 40, looking ahead at TIMES, reducing production
** expression -> expression binary_operator expression
** is permitted because of the following sub-derivation:

expression binary_operator expression // lookahead token appears because binary_operator can begin with TIMES
expression binary_operator expression . 

** Conflict (shift/reduce) in state 26.
** Tokens involved: TIMES REM PLUS OR MINUS LT LEQ GT GEQ EQ DOUBLECOLON DOT DIV DIFF AND
** The following explanations concentrate on token TIMES.
** This state is reached from main after reading:

SET LPAREN unary_operator expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement 
SET LPAREN expression COMMA expression RPAREN 
           (?)

** In state 26, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

unary_operator expression 
               expression binary_operator expression 
                          . TIMES 

** In state 26, looking ahead at TIMES, reducing production
** expression -> unary_operator expression
** is permitted because of the following sub-derivation:

expression binary_operator expression // lookahead token appears because binary_operator can begin with TIMES
unary_operator expression . 

** Conflict (shift/reduce) in state 0.
** Token involved: EOF
** This state is reached from main after reading:



** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
(?)

** In state 0, looking ahead at EOF, shifting is permitted
** because of the following sub-derivation:

. EOF 

** In state 0, looking ahead at EOF, reducing production
** statement ->
** is permitted because of the following sub-derivation:

program EOF // lookahead token appears
statement // lookahead token is inherited
. 
